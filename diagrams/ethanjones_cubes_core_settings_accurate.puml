@startuml Settings_Management
!theme plain
title Settings Management

    class Keybinds {
        ~{readonly} KEYBIND_GROUP : String
        ~{readonly} KEYBIND_BASE : String
        ~{readonly} KEYBIND_FORWARD : String
        ~{readonly} KEYBIND_BACK : String
        ~{readonly} KEYBIND_LEFT : String
        ~{readonly} KEYBIND_RIGHT : String
        ~{readonly} KEYBIND_JUMP : String
        ~{readonly} KEYBIND_DESCEND : String
        ~{readonly} KEYBIND_THROW : String
        ~{readonly} KEYBIND_INVENTORY : String
        ~{readonly} KEYBIND_CHAT : String
        ~{readonly} KEYBIND_FULLSCREEN : String
        ~{readonly} KEYBIND_HIDEGUI : String
        ~{readonly} KEYBIND_SCREENSHOT : String
        ~{readonly} KEYBIND_DEBUG : String
        ~{readonly} KEYBIND_AREABOUNDARIES : String
        ~{static} settingGroup : SettingGroup
        ~settingGroup : return
        --
        ~init() : public static SettingGroup
        ~if(null : settingGroup ==) : void
        ~SettingGroup() : new
        ~shouldDisplay() : Override public boolean
        ~getCode(s : String) : public static int
        ~isJustPressed(s : String) : public static boolean
        ~isPressed(s : String) : public static boolean
    }
    abstract class Setting {
        ~true : return
        --
        ~getActor(settingName : String, visualSettingManager : VisualSettingManager) : public abstract Actor
        ~toString() : public abstract String
        ~toJson() : public abstract JsonValue
        ~readJson(json : JsonValue) : public abstract void
        ~onChange() : public void
        ~shouldDisplay() : public boolean
    }
    class SettingGroup {
        ~{readonly} children : ArrayList<String>
        ~{readonly} childGroups : LinkedHashMap<String, SettingGroup>
        -unlocalizedName : String
        ~this : return
        ~this : return
        ~{readonly} textButton : TextButton
        ~textButton : return
        ~children : return
        ~childGroups : return
        ~unlocalizedName : return
        ~true : return
        --
        ~add(notLocalised : String) : public SettingGroup
        ~add(name : String, settingGroup : SettingGroup) : public SettingGroup
        ~getActor(visualSettingManager : VisualSettingManager) : public Actor
        ~ChangeListener() : new
        ~changed(event : ChangeEvent, actor : Actor) : Override public void
        ~getChildren() : public ArrayList<String>
        ~getChildGroups() : public HashMap<String, SettingGroup>
        ~getUnlocalizedName() : public String
        ~shouldDisplay() : public boolean
    }
    class Settings {
        ~{readonly} USERNAME : String
        ~{readonly} UUID : String
        ~{readonly} GRAPHICS_VIEW_DISTANCE : String
        ~{readonly} GRAPHICS_FOV : String
        ~{readonly} GRAPHICS_FOG : String
        ~{readonly} GRAPHICS_SCALE : String
        ~{readonly} GRAPHICS_AO : String
        ~{readonly} GRAPHICS_SIMPLE_SHADER : String
        ~{readonly} GRAPHICS_SCREENSHOT_SIZE : String
        ~{readonly} INPUT_MOUSE_SENSITIVITY : String
        ~{readonly} INPUT_TOUCHPAD_SIZE : String
        ~{readonly} INPUT_TOUCHPAD_LEFT : String
        ~{readonly} NETWORKING_PORT : String
        ~{readonly} DEBUG_FRAMETIME_GRAPH : String
        ~{readonly} DEBUG_GL_PROFILER : String
        ~{readonly} DEBUG_UNLIMITED_VIEW_DISTANCE : String
        ~{readonly} DEBUG_AREA_SHARING : String
        ~{readonly} GROUP_GRAPHICS : String
        ~{readonly} GROUP_INPUT : String
        ~{readonly} GROUP_NETWORKING : String
        +... (more fields)
        --
        ~SettingGroup() : new
        ~init() : public static void
        ~addSetting() : void
        ~onChange() : Override public void
        ~addSetting() : void
        ~shouldDisplay() : Override public boolean
        ~addSetting() : void
        ~shouldDisplay() : Override public boolean
        ~addSetting() : void
        ~onChange() : Override public void
        ~write() : void
        ~isSetup() : public static boolean
        ~addSetting(notLocalised : String, setting : Setting) : public static void
        ~read() : public static boolean
        ~for(json : Member member :) : void
        +... (more methods)
    }
    interface VisualSettingManager {
        ~setSettingGroup(settingGroup : SettingGroup) : void
        ~getSkin() : Skin
    }
    class BooleanSetting {
        -b : boolean
        ~{readonly} textButton : TextButton
        ~textButton : return
        ~b : return
        --
        ~this() : void
        ~getActor(settingName : String, visualSettingManager : VisualSettingManager) : Override public Actor
        ~ChangeListener() : new
        ~changed(event : ChangeEvent, actor : Actor) : Override public void
        ~set(b : boolean) : public void
        ~onChange() : void
        ~get() : public boolean
        ~toString() : Override public String
        ~toJson() : Override public JsonValue
        ~readJson(json : JsonValue) : Override public void
        ~onChange() : void
    }
    Setting <|-- BooleanSetting
@enduml
